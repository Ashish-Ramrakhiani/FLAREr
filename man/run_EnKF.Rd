% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_EnKF.R
\name{run_EnKF}
\alias{run_EnKF}
\title{Run ensemble Kalman filter and forecastse}
\usage{
run_EnKF(
  states_init,
  pars_init,
  obs,
  obs_sd,
  model_sd,
  working_directory,
  met_file_names,
  inflow_file_names,
  outflow_file_names,
  sim_start_datetime,
  sim_end_datetime,
  forecast_start_datetime = NA,
  config,
  pars_config = NULL,
  states_config,
  obs_config,
  aux_states_init,
  management = NULL
)
}
\arguments{
\item{states_init, }{array of the initial states.  Required dimensions are \verb{[states, depths, ensemble]}}

\item{pars_init, }{array of the initial states.  Required dimensions are \verb{[pars, depths, ensemble]}}

\item{obs, }{array of the observaitons. Required dimensions are `\link{nobs, time, depth}``}

\item{model_sd, }{vector of standard deviations describing the model error for each state}

\item{working_directory, }{directory model executes}

\item{met_file_names, }{vector of meterology file names}

\item{inflow_file_names, }{vector of inflow file names}

\item{outflow_file_names, }{vector of outflow file names}

\item{sim_start_datetime, }{datetime of beginning of the simulation}

\item{sim_end_datetime, }{datetime of the end of the simulation}

\item{forecast_start_datetime, }{datetime when simulate is a forecast}

\item{config, }{list of configurations}

\item{pars_config, }{list of parameter configurations}

\item{states_config, }{list of state configurations}

\item{obs_config, }{list of observation configurations}

\item{aux_states_init, }{list of initial conditions for auxillary states}

\item{management.}{list of management inputs and configuration}
}
\description{
Run ensemble Kalman filter and forecastse
}
\details{
Uses the ensemble Kalman filter to predict water quality for a lake
or reservior.  The function requires the initial conditions (\code{states_init}) for each
state and ensemble member using an array with the following dimension order:
states, depth, ensembles member.  If you are fitting parameters, it also requires
initial conditions for each parameter and ensemble member using an array (\code{par_init}) with the
following dimension order: parameters, ensemble member.  The arrays for states_init
and pars_init can be created using the \code{generate_initial_conditions()} function, if
starting from initial conditions in the  \code{states_config} data frame or from observations
in first time column of the \code{obs} array.  The arrays for \code{states_init} and \verb{par_init`` can be created from the output from a previous run using the }generate_restart_initial_conditions()`
array.

The required columns the states_config data frame with the following columns:
\itemize{
\item \code{state_names}: the name in the GLM model for the state
\item \code{initial_conditions}: the default initial condition for the state if an observation is lacking. Used in \code{generate_initial_conditions()}.  Note:
the \code{config} list should have a variables called \code{default_temp_init} and \code{default_temp_init_depths} that allow for depth variation in the initial
conditions for temperature.
\item \code{model_sd}: the standard deviation of the model error for the state
\item \code{initial_model_sd}: the standard deviation of the initial conditions for the state. Used in \code{generate_initial_conditions()}
\item \code{states_to_obs1}: the name of the observation that matches the model state
\item \code{states_to_obs_mapping_1}: the multipler that converts the state to the observation (1 will be the most common)
\item \code{init_obs_name}: the name of the observations that is used to generate \code{states_init}.  Used in \code{generate_initial_conditions()}
\item \code{init_obs_mapping}: the multipler that converts the state to the observation (1 will be the most common). Used in \code{generate_initial_conditions()}
}
}
